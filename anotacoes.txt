* Testes manuais e automatizados (possuem 3 passos):
	- Pensar em um cenário;
	- Executar uma ação;
	- Validar a saída;

* JUnit: o framework de testes de unidade mais popular do mundo Java
	OBS: "Para utilizá-lo em um método, o mesmo não pode ser estático, sem retorno e nem receber argumentos:" -> public void deveTestar(){}
	
	- A ordem correta dos parâmetros do assertEquals() (e de todos os outros métodos similares) da classe Assert:
		(esperado, calculado)
	- O padrão para nomenclatura de classes de teste: "NomeDaClasse"Test: facilita a rastreabilidade das classes de teste.
	- As classes de teste, por convenção, devem estar no pacote /test com o mesmo caminho da classe real: rastreabilidade dos testes.
	- O tipo double tem problemas de arredondamento, a versão mais nova do JUnit pede para você passar o "tamanho do erro aceitável".
		assertEquals(esperado, calculado, 0.00001)

	- Testes automatizados de unidade: Vantagens
		1) Um teste de unidade executa muito rápido. Veja que ele gasta apenas alguns milissegundos para ser executado. Imagine o tempo que um humano levaria.
		2) Um humano pode eventualmente executar um teste incorreto (montar o cenário ou validar a saída errada, por exemplo). A máquina nunca fará isso. A partir do momento que você escreveu o teste, ela sempre vai executar o mesmo teste.
		3) É muito mais divertido escrever um teste automatizado do que testar manualmente.
		
		"linhas de código escritas com qualidade", então, muito provavelmente, você será mais produtivo com testes.
	